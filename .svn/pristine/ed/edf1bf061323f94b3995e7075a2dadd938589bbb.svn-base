#!/usr/bin/python
import os
import sys
import time
from readscale import *
import MySQLdb as mdb
from time import localtime, strftime
import os.path

scale_id = 1

con = None
debug = None
## connect to the database
con = mdb.connect('localhost', 'coffeeuser', 'coffee16', 'coffeedb');
cur = con.cursor(mdb.cursors.DictCursor)
# get scale info from the database
# how many scales are there? 
#for each scale, get its reading and add it to the database

# get most recently added reading
cur.execute("select * from readings where reading_time = (select MAX(reading_time) from readings)")	 
# this should produce ONE row but in case it does not I'll refer to the rows by their numeric index
rows = cur.fetchall() # fetchall so we can refer to the columns by name
if debug: print "most recent reading time: " + str(rows[0]["reading_time"])
if debug: print "most recent value : " + str(rows[0]["reading_value"])
cachevalue = rows[0]["reading_value"]
cur.close()

while 1:
	time.sleep(.5) # please only one reading per second
	## read the live scale value
	reading = readScale(1,6)
	readval = reading.split(" ")[0]
	readunit = reading.split(" ")[1]
	## if the units are ounces ("oz") then convert to "g"
	if readunit == "oz" and readval !="0":
		readval = str(float(readval)*28.3495)
	if debug: print "current weight : " +str(readval)+" "+readunit
	if debug: print "current time   : "+strftime("%Y-%m-%d %H:%M:%S", localtime())
	
	## compare the cached value with the current value
	if readval != cachevalue:
		## if different then update the database and update the cache
		try:
			# commented out - maybe just reuse the connection
			#con = mdb.connect('localhost', 'coffeeuser', 'coffee16', 'coffeedb');
			cur = con.cursor()
			rightnow=str(strftime('%Y-%m-%d %H:%M:%S', localtime()))
			#print "rightnow: " + rightnow + "<br />\n"
			sql = "insert into readings(reading_time,reading_value,reading_units) values ('%s', '%s', '%s')"%(rightnow,readval,readunit,)
			#print sql
			cur.execute (sql)
			con.commit()
			#print "insert into readings(reading_value, reading_time, reading_units) values ('"+ readval +"','"+ rightnow +"','g')"
			if debug: print "inserted new reading in database"
			print rightnow +"-:-"+readval
			cachevalue = readval
		except mdb.Error, e:  
			print "Error %d: %s" % (e.args[0],e.args[1])
			sys.exit(1)
	else:
		if debug: print "reading unchanged"
		# LONG TIME SINCE LAST READING?
con.close()
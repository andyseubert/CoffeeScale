#!/usr/bin/python
import os
import sys
import time
from readscale import *
import MySQLdb as mdb
from time import localtime, strftime
import os.path
import argparse


con = None
debug = None

## check input - we should expect a serial number and a weight
parser = argparse.ArgumentParser(description="record weight for a given scale in the database")
parser.add_argument('-s','--serial', help='provide a serial number', required=True)
parser.add_argument('-w','--weight', help='provide a weight in grams', required=True)

args=parser.parse_args()
## connect to the database
con = mdb.connect('localhost', 'coffeeuser', 'coffee16', 'coffeedb');
cur = con.cursor(mdb.cursors.DictCursor)


for s,i in serialnos.items():		
	serialno=str(s)
	id=str(i)
	if debug: print
	if debug: print "scale id "+id+" serial: "+serialno
	# get most recently added reading
	readingconnection = mdb.connect('localhost', 'coffeeuser', 'coffee16', 'coffeedb');
	readingcursor=readingconnection.cursor(mdb.cursors.DictCursor)
	if not readingcursor.execute("select * from readings where reading_time = (select MAX(reading_time) from readings where scale_id = '"+id+"' )"):
		cachevalue=0
		if debug: print "no reading found for scale "+id
	else:
		# this should produce ONE row but in case it does not I'll refer to the rows by their numeric index
		rows = readingcursor.fetchall() # fetchall so we can refer to the columns by name
		reading_time = rows[0]["reading_time"]
		if debug: print reading_time
		cachevalue = float(rows[0]["reading_value"])
		if debug: print "most recent reading time: " + str(reading_time)
		if debug: print "most recent value : '" + str(cachevalue)+"'"
		serialnos[serialno]=cachevalue
		if debug: print "scale id:"+id+" weighs: "+str(serialnos[serialno])
		readingcursor.close()
		readingconnection.close()
